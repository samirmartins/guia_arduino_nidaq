{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"In\u00edcio","text":"Grupo de Controle e Modelagem"},{"location":"#aqui-estara-o-conteudo-da-pagina-inicial","title":"Aqui estar\u00e1 o conte\u00fado da p\u00e1gina inicial","text":""},{"location":"arduino/","title":"Aqui estar\u00e1 o conte\u00fado sobre o guia de uso Arduino","text":""},{"location":"nidaq/","title":"Guia de Uso - Placas NIDAQ + Python","text":""},{"location":"nidaq/#o-que-e-este-guia","title":"O que \u00e9 este guia?","text":"<p>Este guia foi escrito para novos membros do GCOM (Grupo de Controle e Modelagem). O objetivo desta se\u00e7\u00e3o \u00e9 desmistificar a utiliza\u00e7\u00e3o de placas de aquisi\u00e7\u00e3o de dados da National Instruments (NIDAQ - National  Instruments Data Acquisition USB Devices) utilizando Python como linguagem de programa\u00e7\u00e3o.</p> <ul> <li>OBSERVA\u00c7\u00c3O 1: para utilizar este guia, o usu\u00e1rio dever\u00e1 estar familiarizado com a linguagem Python, bem como instala\u00e7\u00e3o de bibliotecas. </li> <li>OBSERVA\u00c7\u00c3O 2: a biblioteca nidaqmx ser\u00e1 usada como base neste guia. Para instal\u00e1-la, use o comando: </li> </ul> <pre><code>pip install nidaqmx\n</code></pre> <p>Aqui expressamos publicamente nossa gratid\u00e3o aos autores da biblioteca.</p> <ul> <li>OBSERVA\u00c7\u00c3O 3: o driver USB da placa de aquisi\u00e7\u00e3o de dados precisa estar instalado. No momento da escrita deste  guia, o download podia ser realizado por este link, ap\u00f3s um  registro gratuito em www.ni.com. Alternativamente, o usu\u00e1rio pode instalar drivers utilizando tamb\u00e9m o comando:</li> </ul> <pre><code>python -m nidaqmx installdriver\n</code></pre> <p>Recomendamos a primeira op\u00e7\u00e3o como o padr\u00e3o.</p> <p>IMPORTANTE: esta \u00e9 uma vers\u00e3o muito resumida para uso r\u00e1pido. Maiores detalhes podem ser encontrados (em ingl\u00eas) em  https://pypi.org/project/nidaqmx/</p>"},{"location":"nidaq/#tarefas-task","title":"Tarefas (Task)","text":"<p>Uma tarefa \u00e9 um conjunto de canais virtuais com temporiza\u00e7\u00e3o e outras propriedades. Resumidamente,  s\u00e3o necess\u00e1rias tarefas para aquisi\u00e7\u00e3o e envio de dados. Maiores informa\u00e7\u00f5es aqui.</p> <p>Para criar uma tarefa, use o seguinte comando: </p> <pre><code>import nidaqmx # Importa a biblioteca \n\nwith nidaqmx.Task() as task: # Cria a tarefa \n    pass # Aqui voc\u00ea deve digitar o c\u00f3digo que dever\u00e1 ser executado naquela tarefa.\n</code></pre>"},{"location":"nidaq/#canais-virtuais","title":"Canais Virtuais","text":""},{"location":"nidaq/#timing","title":"Timing","text":""},{"location":"nidaq/#aquisicao-de-dados-analog-input","title":"Aquisi\u00e7\u00e3o de dados - Analog Input","text":""},{"location":"nidaq/#diff-rse-e-nrse","title":"DIFF, RSE e NRSE","text":""},{"location":"nidaq/#analog-input-exemplo","title":"Analog Input - Exemplo","text":""},{"location":"nidaq/#envio-de-dados-analog-output","title":"Envio de dados - Analog Output","text":""},{"location":"nidaq/#analog-output-exemplo","title":"Analog Output - Exemplo","text":""}]}